package com.ftn.sbnz.rules.scoring;

import com.ftn.sbnz.model.dtos.TravelPreferences;
import com.ftn.sbnz.model.models.Location;
import com.ftn.sbnz.model.models.Tag;
import com.ftn.sbnz.model.dtos.Recommendation;
import com.ftn.sbnz.model.enums.FitnessLevel;
import java.util.List;
import java.util.Set;

query "getRecommendations"
    $rec: Recommendation()
end

rule "Create baseline recommendation for all valid locations"
    agenda-group "scoring"
    salience -10
    when
        $location: Location()
        not Recommendation(location == $location)
    then
        Recommendation rec = new Recommendation($location, 10.0, "General option.");
        insert(rec);
        System.out.println("Created BASELINE recommendation for: " + $location.getName() + " with score 10.");
end

rule "Reward recommendations that match user interests"
    agenda-group "scoring"
    salience 10
    when
        $prefs: TravelPreferences($interests: interests)
        $rec: Recommendation($location: location, $tags: location.getTags())
        exists Tag(name memberOf $interests) from $tags
    then
        modify($rec) {
            setScore($rec.getScore() + 10),
            setReason("Matches user interest.")
        }
        System.out.println("Increased score for location: " + $location.getName() + " due to matching interest.");
end


rule "Boost Bled for romance interest"
    agenda-group "scoring"
    no-loop true
    when
        TravelPreferences(interests contains "romance")
        $rec: Recommendation(location.name == "Lake Bled", $score: score)
    then
        modify($rec) {
            setScore($score + 20),
            setReason($rec.getReason() + " Additional points for romance.")
        }
        System.out.println("Increased score for Bled (romance). New score: " + $rec.getScore());
end

rule "Boost Bohinj for adventure interest"
    agenda-group "scoring"
    no-loop true
    when
        TravelPreferences(interests contains "adventure")
        $rec: Recommendation(location.name == "Lake Bohinj", $score: score)
    then
        modify($rec) {
            setScore($score + 20),
            setReason($rec.getReason() + " Additional points for adventure.")
        }
        System.out.println("Increased score for Bohinj (adventure). New score: " + $rec.getScore());
end

rule "Penalize Skocjan for low fitness"
    agenda-group "scoring"
    no-loop true
    when
        TravelPreferences(fitnessLevel == com.ftn.sbnz.model.enums.FitnessLevel.LOW)
        $rec: Recommendation(location.name == "Škocjan Caves", $score: score)
    then
        modify($rec) {
            setScore($score - 30),
            setReason($rec.getReason() + " Reduced score due to high physical demand.")
        }
        System.out.println("Decreased score for Škocjan Caves (low fitness). New score: " + $rec.getScore());
end

rule "Reward Postojna for families"
    agenda-group "scoring"
    no-loop true
    when
        TravelPreferences(interests contains "families")
        $rec: Recommendation(location.name == "Postojna Cave", $score: score)
    then
        modify($rec) {
            setScore($score + 15),
            setReason($rec.getReason() + " Additional points for family activities.")
        }
        System.out.println("Increased score for Postojna Cave (families). New score: " + $rec.getScore());
end

rule "Reward Bohinj for authenticity"
    agenda-group "scoring"
    no-loop true
    when
        TravelPreferences(interests contains "authentic")
        $rec: Recommendation(location.name == "Lake Bohinj", $score: score)
    then
        modify($rec) {
            setScore($score + 15),
            setReason($rec.getReason() + " Additional points for an authentic nature experience.")
        }
        System.out.println("Increased score for Bohinj (authenticity). New score: " + $rec.getScore());
end

rule "Reward Skocjan Caves for specific interests"
    agenda-group "scoring"
    no-loop true
    when
        TravelPreferences(interests contains "UNESCO" || interests contains "geology")
        $rec: Recommendation(location.name == "Škocjan Caves", $score: score)
    then
        modify($rec) {
            setScore($score + 25),
            setReason($rec.getReason() + " High bonus for UNESCO and geological interests.")
        }
        System.out.println("Increased score for Škocjan Caves (UNESCO/geology). New score: " + $rec.getScore());
end

rule "Promote the Postojna + Predjama Castle package"
    agenda-group "scoring"
    no-loop true
    salience -5
    when
        $rec1: Recommendation(location.name == "Postojna Cave", $score1: score)
        $rec2: Recommendation(location.name == "Predjama Castle", $score2: score)
    then
        modify($rec1) {
            setScore($score1 + 10),
            setReason($rec1.getReason() + " Bonus for being in a package with Predjama Castle.")
        }
        modify($rec2) {
            setScore($score2 + 10),
            setReason($rec2.getReason() + " Bonus for being in a package with Postojna Cave.")
        }
        System.out.println("Increased score for Postojna and Predjama Castle as a package.");
end

rule "Promote Ljubljana for urban interest on longer trips"
    agenda-group "scoring"
    no-loop true
    when
        TravelPreferences(numberOfDays >= 3, interests contains "city")
        $rec: Recommendation(location.name == "Ljubljana", $score: score)
    then
        modify($rec) {
            setScore($score + 15),
            setReason($rec.getReason() + " Bonus as an excellent city base for a longer trip.")
        }
        System.out.println("Increased score for Ljubljana (as a city base). New score: " + $rec.getScore());
end

rule "Promote Ljubljana as a central hub for multi-region trips"
    agenda-group "scoring"
    no-loop true
    when
        TravelPreferences(numberOfDays >= 3)
        accumulate(
            Recommendation(score > 10, $region: location.getRegion());
            $regions: collectSet($region)
        )
        Set(size >= 2) from $regions
        $rec: Recommendation(location.name == "Ljubljana", $score: score)
    then
        modify($rec) {
            setScore($score + 20),
            setReason($rec.getReason() + " Bonus as a central hub for a multi-region trip.")
        }
        System.out.println("Increased score for Ljubljana (as a central hub). New score: " + $rec.getScore());
end

rule "Synergy between Soca Valley and Kobarid Museum - Advanced"
    agenda-group "scoring"
    no-loop true
    salience -5
    when
        $prefs: TravelPreferences(interests contains "adventure")
        exists (String(this matches ".*history.*") from $prefs.getInterests())
        $rec1: Recommendation(location.name == "Soča Valley", $score1: score)
        $rec2: Recommendation(location.name == "Kobarid Museum", $score2: score)
    then
        modify($rec1) { setScore($score1 + 20) }
        modify($rec2) { setScore($score2 + 20) }
        System.out.println("Increased score for Soča Valley and Kobarid Museum as a package.");
end

rule "Promote Eastern Heritage Trail"
    agenda-group "scoring"
    no-loop true
    when
        TravelPreferences(interests contains "wine", interests contains "history")
        $rec: Recommendation(location.name in ("Maribor", "Ptuj", "Celje"), $score: score)
    then
        modify($rec) {
            setScore($score + 25),
            setReason($rec.getReason() + " Bonus as part of the Eastern Heritage Trail.")
        }
        System.out.println("Increased score for " + $rec.getLocation().getName() + " (Eastern Heritage).");
end

rule "Massive boost for perfect adventurer profile"
    agenda-group "scoring"
    no-loop true
    salience 5
    when
        TravelPreferences(fitnessLevel == FitnessLevel.HIGH, interests contains "challenging")
        $rec: Recommendation(location.requiredFitness == FitnessLevel.HIGH, $score: score)
    then
        modify($rec) {
            setScore($score + 50),
            setReason($rec.getReason() + " Special bonus for the ideal adventurer.")
        }
        System.out.println("Special bonus for " + $rec.getLocation().getName() + ". New score: " + $rec.getScore());
end